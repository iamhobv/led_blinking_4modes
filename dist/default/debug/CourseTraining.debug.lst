

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Oct 20 21:45:52 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 23/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4620 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   00FEBA                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _port_reg
    59   00FEBA  80                 	db	128
    60   00FEBB  0F                 	db	15
    61   00FEBC  81                 	db	129
    62   00FEBD  0F                 	db	15
    63   00FEBE  82                 	db	130
    64   00FEBF  0F                 	db	15
    65   00FEC0  83                 	db	131
    66   00FEC1  0F                 	db	15
    67   00FEC2  84                 	db	132
    68   00FEC3  0F                 	db	15
    69                           
    70                           ;initializer for _lat_reg
    71   00FEC4  89                 	db	137
    72   00FEC5  0F                 	db	15
    73   00FEC6  8A                 	db	138
    74   00FEC7  0F                 	db	15
    75   00FEC8  8B                 	db	139
    76   00FEC9  0F                 	db	15
    77   00FECA  8C                 	db	140
    78   00FECB  0F                 	db	15
    79   00FECC  8D                 	db	141
    80   00FECD  0F                 	db	15
    81                           
    82                           ;initializer for _tris_reg
    83   00FECE  92                 	db	146
    84   00FECF  0F                 	db	15
    85   00FED0  93                 	db	147
    86   00FED1  0F                 	db	15
    87   00FED2  94                 	db	148
    88   00FED3  0F                 	db	15
    89   00FED4  95                 	db	149
    90   00FED5  0F                 	db	15
    91   00FED6  96                 	db	150
    92   00FED7  0F                 	db	15
    93                           
    94                           	psect	nvCOMRAM
    95   00002F                     __pnvCOMRAM:
    96                           	callstack 0
    97   00002F                     _tens:
    98                           	callstack 0
    99   00002F                     	ds	1
   100   000000                     _PORTE	set	3972
   101   000000                     _PORTD	set	3971
   102   000000                     _PORTC	set	3970
   103   000000                     _PORTB	set	3969
   104   000000                     _PORTA	set	3968
   105   000000                     _LATA	set	3977
   106   000000                     _TRISA	set	3986
   107   000000                     _TRISE	set	3990
   108   000000                     _TRISD	set	3989
   109   000000                     _TRISC	set	3988
   110   000000                     _TRISB	set	3987
   111   000000                     _LATE	set	3981
   112   000000                     _LATD	set	3980
   113   000000                     _LATC	set	3979
   114   000000                     _LATB	set	3978
   115                           
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119   00FED8                     __pcinit:
   120                           	callstack 0
   121   00FED8                     start_initialization:
   122                           	callstack 0
   123   00FED8                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Initialize objects allocated to COMRAM (30 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128   00FED8  0EBA               	movlw	low __pidataCOMRAM
   129   00FEDA  6EF6               	movwf	tblptrl,c
   130   00FEDC  0EFE               	movlw	high __pidataCOMRAM
   131   00FEDE  6EF7               	movwf	tblptrh,c
   132   00FEE0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133   00FEE2  6EF8               	movwf	tblptru,c
   134   00FEE4  EE00  F001         	lfsr	0,__pdataCOMRAM
   135   00FEE8  EE10 F01E          	lfsr	1,30
   136   00FEEC                     copy_data0:
   137   00FEEC  0009               	tblrd		*+
   138   00FEEE  CFF5 FFEE          	movff	tablat,postinc0
   139   00FEF2  50E5               	movf	postdec1,w,c
   140   00FEF4  50E1               	movf	fsr1l,w,c
   141   00FEF6  E1FA               	bnz	copy_data0
   142                           
   143                           ; Clear objects allocated to COMRAM (9 bytes)
   144   00FEF8  EE00  F01F         	lfsr	0,__pbssCOMRAM
   145   00FEFC  0E09               	movlw	9
   146   00FEFE                     clear_0:
   147   00FEFE  6AEE               	clrf	postinc0,c
   148   00FF00  06E8               	decf	wreg,f,c
   149   00FF02  E1FD               	bnz	clear_0
   150   00FF04                     end_of_initialization:
   151                           	callstack 0
   152   00FF04                     __end_of__initialization:
   153                           	callstack 0
   154   00FF04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155   00FF06  6EF8               	movwf	tblptru,c
   156   00FF08  0100               	movlb	0
   157   00FF0A  EFCD  F07F         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   00001F                     __pbssCOMRAM:
   161                           	callstack 0
   162   00001F                     _ones:
   163                           	callstack 0
   164   00001F                     	ds	1
   165   000020                     _ret:
   166                           	callstack 0
   167   000020                     	ds	1
   168   000021                     relay_turn_off@F2890:
   169                           	callstack 0
   170   000021                     	ds	1
   171   000022                     relay_turn_on@F2885:
   172                           	callstack 0
   173   000022                     	ds	1
   174   000023                     relay_intialize@F2880:
   175                           	callstack 0
   176   000023                     	ds	1
   177   000024                     led_toggle@F2897:
   178                           	callstack 0
   179   000024                     	ds	1
   180   000025                     led_turn_off@F2892:
   181                           	callstack 0
   182   000025                     	ds	1
   183   000026                     led_turn_on@F2887:
   184                           	callstack 0
   185   000026                     	ds	1
   186   000027                     led_intialize@F2882:
   187                           	callstack 0
   188   000027                     	ds	1
   189                           
   190                           	psect	dataCOMRAM
   191   000001                     __pdataCOMRAM:
   192                           	callstack 0
   193   000001                     _port_reg:
   194                           	callstack 0
   195   000001                     	ds	10
   196   00000B                     _lat_reg:
   197                           	callstack 0
   198   00000B                     	ds	10
   199   000015                     _tris_reg:
   200                           	callstack 0
   201   000015                     	ds	10
   202                           
   203                           	psect	cstackCOMRAM
   204   000028                     __pcstackCOMRAM:
   205                           	callstack 0
   206   000028                     gpio_port_direction_initialize@direction:
   207                           	callstack 0
   208   000028                     gpio_port_write_logic@logic:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x0
   212   000028                     	ds	1
   213   000029                     ??_gpio_port_direction_initialize:
   214   000029                     ??_gpio_port_write_logic:
   215                           
   216                           ; 1 bytes @ 0x1
   217   000029                     	ds	2
   218   00002B                     gpio_port_direction_initialize@ret:
   219                           	callstack 0
   220   00002B                     gpio_port_write_logic@ret:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x3
   224   00002B                     	ds	1
   225   00002C                     gpio_port_direction_initialize@port:
   226                           	callstack 0
   227   00002C                     gpio_port_write_logic@port:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x4
   231   00002C                     	ds	1
   232   00002D                     ??_main:
   233                           
   234                           ; 1 bytes @ 0x5
   235   00002D                     	ds	2
   236                           
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 20 in file "application.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  2  219[None  ] int 
   249 ;; Registers used:
   250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   260 ;;Total ram usage:        2 bytes
   261 ;; Hardware stack levels required when called: 2
   262 ;; This function calls:
   263 ;;		_application_intialize
   264 ;;		_gpio_port_write_logic
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text0
   271   00FF9A                     __ptext0:
   272                           	callstack 0
   273   00FF9A                     _main:
   274                           	callstack 29
   275   00FF9A                     
   276                           ;application.c: 21:     application_intialize();
   277   00FF9A  EC52  F07F         	call	_application_intialize	;wreg free
   278   00FF9E                     l1352:
   279                           
   280                           ;application.c: 26:         for(tens=0;tens<10;tens++)
   281   00FF9E  0E00               	movlw	0
   282   00FFA0  6E2F               	movwf	_tens^0,c
   283   00FFA2                     l1358:
   284                           
   285                           ;application.c: 27:         {;application.c: 28:             ret = gpio_port_write_logic
      +                          (PORTD_INDEX,tens);
   286   00FFA2  C02F  F028         	movff	_tens,gpio_port_write_logic@logic
   287   00FFA6  0E03               	movlw	3
   288   00FFA8  ECAA  F07F         	call	_gpio_port_write_logic
   289   00FFAC  6E20               	movwf	_ret^0,c
   290   00FFAE                     
   291                           ;application.c: 30:             for(ones=0;ones<10;ones++){
   292   00FFAE  0E00               	movlw	0
   293   00FFB0  6E1F               	movwf	_ones^0,c
   294   00FFB2                     l1366:
   295                           
   296                           ;application.c: 31:             ret = gpio_port_write_logic(PORTC_INDEX,ones);
   297   00FFB2  C01F  F028         	movff	_ones,gpio_port_write_logic@logic
   298   00FFB6  0E02               	movlw	2
   299   00FFB8  ECAA  F07F         	call	_gpio_port_write_logic
   300   00FFBC  6E20               	movwf	_ret^0,c
   301   00FFBE                     
   302                           ;application.c: 32:             _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   303   00FFBE  0E0B               	movlw	11
   304   00FFC0  6E2E               	movwf	(??_main+1)^0,c
   305   00FFC2  0E26               	movlw	38
   306   00FFC4  6E2D               	movwf	??_main^0,c
   307   00FFC6  0E5E               	movlw	94
   308   00FFC8                     u657:
   309   00FFC8  2EE8               	decfsz	wreg,f,c
   310   00FFCA  D7FE               	bra	u657
   311   00FFCC  2E2D               	decfsz	??_main^0,f,c
   312   00FFCE  D7FC               	bra	u657
   313   00FFD0  2E2E               	decfsz	(??_main+1)^0,f,c
   314   00FFD2  D7FA               	bra	u657
   315   00FFD4                     
   316                           ;application.c: 33:              }
   317   00FFD4  2A1F               	incf	_ones^0,f,c
   318   00FFD6  0E09               	movlw	9
   319   00FFD8  641F               	cpfsgt	_ones^0,c
   320   00FFDA  EFF1  F07F         	goto	u631
   321   00FFDE  EFF3  F07F         	goto	u630
   322   00FFE2                     u631:
   323   00FFE2  EFD9  F07F         	goto	l1366
   324   00FFE6                     u630:
   325   00FFE6                     
   326                           ;application.c: 34:         }
   327   00FFE6  2A2F               	incf	_tens^0,f,c
   328   00FFE8  0E09               	movlw	9
   329   00FFEA  642F               	cpfsgt	_tens^0,c
   330   00FFEC  EFFA  F07F         	goto	u641
   331   00FFF0  EFFC  F07F         	goto	u640
   332   00FFF4                     u641:
   333   00FFF4  EFD1  F07F         	goto	l1358
   334   00FFF8                     u640:
   335   00FFF8  EFCF  F07F         	goto	l1352
   336   00FFFC  EF00  F000         	goto	start
   337   010000                     __end_of_main:
   338                           	callstack 0
   339                           
   340 ;; *************** function _gpio_port_write_logic *****************
   341 ;; Defined at:
   342 ;;		line 157 in file "MCAL_Layer/GPIO/hal_gpio.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  port            1    wreg     enum E2819
   345 ;;  logic           1    0[COMRAM] unsigned char 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  port            1    4[COMRAM] enum E2819
   348 ;;  ret             1    3[COMRAM] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      unsigned char 
   351 ;; Registers used:
   352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        5 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text1
   372   00FF54                     __ptext1:
   373                           	callstack 0
   374   00FF54                     _gpio_port_write_logic:
   375                           	callstack 30
   376                           
   377                           ;incstack = 0
   378                           ;gpio_port_write_logic@port stored from wreg
   379   00FF54  6E2C               	movwf	gpio_port_write_logic@port^0,c
   380   00FF56                     
   381                           ;MCAL_Layer/GPIO/hal_gpio.c: 157: Std_ReturnType gpio_port_write_logic(port_index_t port
      +                          ,uint8 logic);MCAL_Layer/GPIO/hal_gpio.c: 158: {;MCAL_Layer/GPIO/hal_gpio.c: 159:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
   382   00FF56  0E01               	movlw	1
   383   00FF58  6E2B               	movwf	gpio_port_write_logic@ret^0,c
   384   00FF5A                     
   385                           ;MCAL_Layer/GPIO/hal_gpio.c: 160:     if (port > 5 - 1) {
   386   00FF5A  0E04               	movlw	4
   387   00FF5C  642C               	cpfsgt	gpio_port_write_logic@port^0,c
   388   00FF5E  EFB3  F07F         	goto	u621
   389   00FF62  EFB5  F07F         	goto	u620
   390   00FF66                     u621:
   391   00FF66  EFB9  F07F         	goto	l1338
   392   00FF6A                     u620:
   393   00FF6A                     
   394                           ;MCAL_Layer/GPIO/hal_gpio.c: 161:         ret = (Std_ReturnType)0x00;
   395   00FF6A  0E00               	movlw	0
   396   00FF6C  6E2B               	movwf	gpio_port_write_logic@ret^0,c
   397                           
   398                           ;MCAL_Layer/GPIO/hal_gpio.c: 162:     } else {
   399   00FF6E  EFCB  F07F         	goto	l1340
   400   00FF72                     l1338:
   401                           
   402                           ;MCAL_Layer/GPIO/hal_gpio.c: 163:         *lat_reg[port] = logic;
   403   00FF72  502C               	movf	gpio_port_write_logic@port^0,w,c
   404   00FF74  0D02               	mullw	2
   405   00FF76  0E0B               	movlw	low _lat_reg
   406   00FF78  24F3               	addwf	243,w,c
   407   00FF7A  6ED9               	movwf	fsr2l,c
   408   00FF7C  0E00               	movlw	high _lat_reg
   409   00FF7E  20F4               	addwfc	prodh,w,c
   410   00FF80  6EDA               	movwf	fsr2h,c
   411   00FF82  CFDE F029          	movff	postinc2,??_gpio_port_write_logic
   412   00FF86  CFDD F02A          	movff	postdec2,??_gpio_port_write_logic+1
   413   00FF8A  C029  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   414   00FF8E  C02A  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   415   00FF92  C028  FFDF         	movff	gpio_port_write_logic@logic,indf2
   416   00FF96                     l1340:
   417                           
   418                           ;MCAL_Layer/GPIO/hal_gpio.c: 165:     return ret;
   419   00FF96  502B               	movf	gpio_port_write_logic@ret^0,w,c
   420   00FF98  0012               	return		;funcret
   421   00FF9A                     __end_of_gpio_port_write_logic:
   422                           	callstack 0
   423                           
   424 ;; *************** function _application_intialize *****************
   425 ;; Defined at:
   426 ;;		line 40 in file "application.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  ret             1    0        unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 1
   447 ;; This function calls:
   448 ;;		_gpio_port_direction_initialize
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text2
   455   00FEA4                     __ptext2:
   456                           	callstack 0
   457   00FEA4                     _application_intialize:
   458                           	callstack 29
   459   00FEA4  0E80               	movlw	128
   460   00FEA6  6E28               	movwf	gpio_port_direction_initialize@direction^0,c
   461   00FEA8  0E02               	movlw	2
   462   00FEAA  EC87  F07F         	call	_gpio_port_direction_initialize
   463   00FEAE  0E80               	movlw	128
   464   00FEB0  6E28               	movwf	gpio_port_direction_initialize@direction^0,c
   465   00FEB2  0E03               	movlw	3
   466   00FEB4  EC87  F07F         	call	_gpio_port_direction_initialize
   467   00FEB8  0012               	return		;funcret
   468   00FEBA                     __end_of_application_intialize:
   469                           	callstack 0
   470                           
   471 ;; *************** function _gpio_port_direction_initialize *****************
   472 ;; Defined at:
   473 ;;		line 125 in file "MCAL_Layer/GPIO/hal_gpio.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  port            1    wreg     enum E2819
   476 ;;  direction       1    0[COMRAM] unsigned char 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  port            1    4[COMRAM] enum E2819
   479 ;;  ret             1    3[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      unsigned char 
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   489 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;Total ram usage:        5 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_application_intialize
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text3
   503   00FF0E                     __ptext3:
   504                           	callstack 0
   505   00FF0E                     _gpio_port_direction_initialize:
   506                           	callstack 29
   507                           
   508                           ;incstack = 0
   509                           ;gpio_port_direction_initialize@port stored from wreg
   510   00FF0E  6E2C               	movwf	gpio_port_direction_initialize@port^0,c
   511   00FF10                     
   512                           ;MCAL_Layer/GPIO/hal_gpio.c: 125: Std_ReturnType gpio_port_direction_initialize(port_ind
      +                          ex_t port,uint8 direction);MCAL_Layer/GPIO/hal_gpio.c: 126: {;MCAL_Layer/GPIO/hal_gpio.c
      +                          : 127:     Std_ReturnType ret = (Std_ReturnType)0x01;
   513   00FF10  0E01               	movlw	1
   514   00FF12  6E2B               	movwf	gpio_port_direction_initialize@ret^0,c
   515   00FF14                     
   516                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:     if(port > 5 -1)
   517   00FF14  0E04               	movlw	4
   518   00FF16  642C               	cpfsgt	gpio_port_direction_initialize@port^0,c
   519   00FF18  EF90  F07F         	goto	u611
   520   00FF1C  EF92  F07F         	goto	u610
   521   00FF20                     u611:
   522   00FF20  EF96  F07F         	goto	l1326
   523   00FF24                     u610:
   524   00FF24                     
   525                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:     {;MCAL_Layer/GPIO/hal_gpio.c: 130:         ret = (
      +                          Std_ReturnType)0x00;
   526   00FF24  0E00               	movlw	0
   527   00FF26  6E2B               	movwf	gpio_port_direction_initialize@ret^0,c
   528                           
   529                           ;MCAL_Layer/GPIO/hal_gpio.c: 131:     }
   530   00FF28  EFA8  F07F         	goto	l1328
   531   00FF2C                     l1326:
   532                           
   533                           ;MCAL_Layer/GPIO/hal_gpio.c: 133:     {;MCAL_Layer/GPIO/hal_gpio.c: 134:         *tris_r
      +                          eg[port] = direction;
   534   00FF2C  502C               	movf	gpio_port_direction_initialize@port^0,w,c
   535   00FF2E  0D02               	mullw	2
   536   00FF30  0E15               	movlw	low _tris_reg
   537   00FF32  24F3               	addwf	243,w,c
   538   00FF34  6ED9               	movwf	fsr2l,c
   539   00FF36  0E00               	movlw	high _tris_reg
   540   00FF38  20F4               	addwfc	prodh,w,c
   541   00FF3A  6EDA               	movwf	fsr2h,c
   542   00FF3C  CFDE F029          	movff	postinc2,??_gpio_port_direction_initialize
   543   00FF40  CFDD F02A          	movff	postdec2,??_gpio_port_direction_initialize+1
   544   00FF44  C029  FFD9         	movff	??_gpio_port_direction_initialize,fsr2l
   545   00FF48  C02A  FFDA         	movff	??_gpio_port_direction_initialize+1,fsr2h
   546   00FF4C  C028  FFDF         	movff	gpio_port_direction_initialize@direction,indf2
   547   00FF50                     l1328:
   548                           
   549                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     return ret;
   550   00FF50  502B               	movf	gpio_port_direction_initialize@ret^0,w,c
   551   00FF52  0012               	return		;funcret
   552   00FF54                     __end_of_gpio_port_direction_initialize:
   553                           	callstack 0
   554   000000                     
   555                           	psect	rparam
   556   000000                     
   557                           	psect	config
   558                           
   559                           ; Padding undefined space
   560   300000                     	org	3145728
   561   300000  FF                 	db	255
   562                           
   563                           ;Config register CONFIG1H @ 0x300001
   564                           ;	Oscillator Selection bits
   565                           ;	OSC = HS, HS oscillator
   566                           ;	Fail-Safe Clock Monitor Enable bit
   567                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   568                           ;	Internal/External Oscillator Switchover bit
   569                           ;	IESO = OFF, Oscillator Switchover mode disabled
   570   300001                     	org	3145729
   571   300001  02                 	db	2
   572                           
   573                           ;Config register CONFIG2L @ 0x300002
   574                           ;	Power-up Timer Enable bit
   575                           ;	PWRT = OFF, PWRT disabled
   576                           ;	Brown-out Reset Enable bits
   577                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   578                           ;	Brown Out Reset Voltage bits
   579                           ;	BORV = 1, 
   580   300002                     	org	3145730
   581   300002  09                 	db	9
   582                           
   583                           ;Config register CONFIG2H @ 0x300003
   584                           ;	Watchdog Timer Enable bit
   585                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   586                           ;	Watchdog Timer Postscale Select bits
   587                           ;	WDTPS = 32768, 1:32768
   588   300003                     	org	3145731
   589   300003  1E                 	db	30
   590                           
   591                           ; Padding undefined space
   592   300004                     	org	3145732
   593   300004  FF                 	db	255
   594                           
   595                           ;Config register CONFIG3H @ 0x300005
   596                           ;	CCP2 MUX bit
   597                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   598                           ;	PORTB A/D Enable bit
   599                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   600                           ;	Low-Power Timer1 Oscillator Enable bit
   601                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   602                           ;	MCLR Pin Enable bit
   603                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   604   300005                     	org	3145733
   605   300005  81                 	db	129
   606                           
   607                           ;Config register CONFIG4L @ 0x300006
   608                           ;	Stack Full/Underflow Reset Enable bit
   609                           ;	STVREN = ON, Stack full/underflow will cause Reset
   610                           ;	Single-Supply ICSP Enable bit
   611                           ;	LVP = OFF, Single-Supply ICSP disabled
   612                           ;	Extended Instruction Set Enable bit
   613                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   614                           ;	Background Debugger Enable bit
   615                           ;	DEBUG = 0x1, unprogrammed default
   616   300006                     	org	3145734
   617   300006  81                 	db	129
   618                           
   619                           ; Padding undefined space
   620   300007                     	org	3145735
   621   300007  FF                 	db	255
   622                           
   623                           ;Config register CONFIG5L @ 0x300008
   624                           ;	Code Protection bit
   625                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   626                           ;	Code Protection bit
   627                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   628                           ;	Code Protection bit
   629                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   630                           ;	Code Protection bit
   631                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   632   300008                     	org	3145736
   633   300008  0F                 	db	15
   634                           
   635                           ;Config register CONFIG5H @ 0x300009
   636                           ;	Boot Block Code Protection bit
   637                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   638                           ;	Data EEPROM Code Protection bit
   639                           ;	CPD = OFF, Data EEPROM not code-protected
   640   300009                     	org	3145737
   641   300009  C0                 	db	192
   642                           
   643                           ;Config register CONFIG6L @ 0x30000A
   644                           ;	Write Protection bit
   645                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   646                           ;	Write Protection bit
   647                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   648                           ;	Write Protection bit
   649                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   650                           ;	Write Protection bit
   651                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   652   30000A                     	org	3145738
   653   30000A  0F                 	db	15
   654                           
   655                           ;Config register CONFIG6H @ 0x30000B
   656                           ;	Configuration Register Write Protection bit
   657                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   658                           ;	Boot Block Write Protection bit
   659                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   660                           ;	Data EEPROM Write Protection bit
   661                           ;	WRTD = OFF, Data EEPROM not write-protected
   662   30000B                     	org	3145739
   663   30000B  E0                 	db	224
   664                           
   665                           ;Config register CONFIG7L @ 0x30000C
   666                           ;	Table Read Protection bit
   667                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   668                           ;	Table Read Protection bit
   669                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   670                           ;	Table Read Protection bit
   671                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   672                           ;	Table Read Protection bit
   673                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   674   30000C                     	org	3145740
   675   30000C  0F                 	db	15
   676                           
   677                           ;Config register CONFIG7H @ 0x30000D
   678                           ;	Boot Block Table Read Protection bit
   679                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   680   30000D                     	org	3145741
   681   30000D  40                 	db	64
   682                           tosu	equ	0xFFF
   683                           tosh	equ	0xFFE
   684                           tosl	equ	0xFFD
   685                           stkptr	equ	0xFFC
   686                           pclatu	equ	0xFFB
   687                           pclath	equ	0xFFA
   688                           pcl	equ	0xFF9
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           prodh	equ	0xFF4
   694                           prodl	equ	0xFF3
   695                           indf0	equ	0xFEF
   696                           postinc0	equ	0xFEE
   697                           postdec0	equ	0xFED
   698                           preinc0	equ	0xFEC
   699                           plusw0	equ	0xFEB
   700                           fsr0h	equ	0xFEA
   701                           fsr0l	equ	0xFE9
   702                           wreg	equ	0xFE8
   703                           indf1	equ	0xFE7
   704                           postinc1	equ	0xFE6
   705                           postdec1	equ	0xFE5
   706                           preinc1	equ	0xFE4
   707                           plusw1	equ	0xFE3
   708                           fsr1h	equ	0xFE2
   709                           fsr1l	equ	0xFE1
   710                           bsr	equ	0xFE0
   711                           indf2	equ	0xFDF
   712                           postinc2	equ	0xFDE
   713                           postdec2	equ	0xFDD
   714                           preinc2	equ	0xFDC
   715                           plusw2	equ	0xFDB
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         9
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_write_logic
    _application_intialize->_gpio_port_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     487
                                              5 COMRAM     2     2      0
              _application_intialize
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     242
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0     245
     _gpio_port_direction_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_initialize                       5     4      1     242
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _gpio_port_direction_initialize
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      7      2F       1       37.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      39        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Oct 20 21:45:52 2023

                                    l230 FEB8                                      l177 FF52  
                                    l189 FF98                                      u610 FF24  
                                    u611 FF20                                      u620 FF6A  
                                    u621 FF66                                      u630 FFE6  
                                    u631 FFE2                                      u640 FFF8  
                                    u641 FFF4                                      u657 FFC8  
                                    _ret 0020                                      prod 0FF3  
                                    wreg 0FE8                                     l1320 FF10  
                                   l1322 FF14                                     l1324 FF24  
                                   l1340 FF96                                     l1332 FF56  
                                   l1326 FF2C                                     l1334 FF5A  
                                   l1350 FF9A                                     l1328 FF50  
                                   l1344 FEA4                                     l1336 FF6A  
                                   l1360 FFAE                                     l1352 FF9E  
                                   l1346 FEA4                                     l1338 FF72  
                                   l1370 FFD4                                     l1348 FEAE  
                                   l1372 FFD6                                     l1374 FFE6  
                                   l1366 FFB2                                     l1358 FFA2  
                                   l1376 FFE8                                     l1368 FFBE  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                  ??_application_intialize 002D  
                                   _main FF9A                                     _ones 001F  
                                   _tens 002F                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                  _gpio_port_write_logic FF54                                    ?_main 0028  
                    relay_turn_off@F2890 0021                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    tablat 0FF5  
                        __initialization FED8                             __end_of_main 0000  
                                 ??_main 002D                            __activetblptr 0002  
                       led_turn_on@F2887 0026                gpio_port_write_logic@port 002C  
 __end_of_gpio_port_direction_initialize FF54           _gpio_port_direction_initialize FF0E  
                 ?_gpio_port_write_logic 0028                                   clear_0 FEFE  
                                 isa$std 0001                             __pdataCOMRAM 0001  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0080  
                __end_of__initialization FF04                            ___rparam_used 0001  
                         __pcstackCOMRAM 0028                 gpio_port_write_logic@ret 002B  
                             __pnvCOMRAM 002F            __end_of_application_intialize FEBA  
                   relay_intialize@F2880 0023                        led_turn_off@F2892 0025  
                        led_toggle@F2897 0024                                  __Hparam 0000  
                                __Lparam 0000                                  __pcinit FED8  
                                __ramtop 1000                                  __ptext0 FF9A  
                                __ptext1 FF54                                  __ptext2 FEA4  
                                __ptext3 FF0E                                  _lat_reg 000B  
                   end_of_initialization FF04        gpio_port_direction_initialize@ret 002B  
                          __Lmediumconst 0000                  ??_gpio_port_write_logic 0029  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                     relay_turn_on@F2885 0022  gpio_port_direction_initialize@direction 0028  
                          __pidataCOMRAM FEBA                      start_initialization FED8  
                            __pbssCOMRAM 001F                    _application_intialize FEA4  
          __end_of_gpio_port_write_logic FF9A                                copy_data0 FEEC  
                 ?_application_intialize 0028                                 __Hrparam 0000  
                               __Lrparam 0000                       led_intialize@F2882 0027  
                               isa$xinst 0000                                 _port_reg 0001  
                               _tris_reg 0015         ??_gpio_port_direction_initialize 0029  
        ?_gpio_port_direction_initialize 0028       gpio_port_direction_initialize@port 002C  
             gpio_port_write_logic@logic 0028  
